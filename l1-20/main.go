package main

import (
	"errors"
	"fmt"
	"strings"
)

/*
	–†–∞–∑—Ä–∞–±–æ—Ç–∞—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –ø–µ—Ä–µ–≤–æ—Ä–∞—á–∏–≤–∞–µ—Ç —Å–ª–æ–≤–∞ –≤ —Å—Ç—Ä–æ–∫–µ.
	–ü—Ä–∏–º–µ—Ä: ¬´snow dog sun ‚Äî sun dog snow¬ª.
*/

// reverseWords - —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏—è –ø–æ—Ä—è–¥–∫–∞ —Å–ª–æ–≤ –≤ —Å—Ç—Ä–æ–∫–µ
func reverseWords(str string) (string, error) {

	// –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–µ –ø—Ä–∏—à–ª–∞ –ª–∏ –Ω–∞–º –Ω–∞ –≤—Ö–æ–¥ –ø—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞
	if len(str) == 0 {
		return str, errors.New("empty string")
	} else if len(str) == 1 { // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å—Ç—Ä–æ–∫–∏ –Ω–∞ 1 —Å–ª–æ–≤–æ
		return str, nil
	}

	// –†–∞–∑–±–∏–≤–∞–µ–º —Å—Ç—Ä–æ–∫—É –Ω–∞ —Å–ª–æ–≤–∞ (–∏—Å–ø–æ–ª—å–∑—É—è –ø—Ä–æ–±–µ–ª—ã –∏ –¥—Ä—É–≥–∏–µ —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª–∏)
	words := strings.Fields(str)

	// –ü–µ—Ä–µ–≤–æ—Ä–∞—á–∏–≤–∞–µ–º —Å–ª–∞–π—Å —Å–ª–æ–≤ (–º–µ–Ω—è–µ–º –º–µ—Å—Ç–∞–º–∏ —Å–ª–æ–≤–∞ —Å –Ω–∞—á–∞–ª–∞ –∏ —Å –∫–æ–Ω—Ü–∞)
	for i, j := 0, len(words)-1; i < j; i, j = i+1, j-1 {
		words[i], words[j] = words[j], words[i]
	}

	// –°–æ–±–∏—Ä–∞–µ–º —Å–ª–æ–≤–∞ –≤ —Å—Ç—Ä–æ–∫—É —Å —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª–µ–º (–ø—Ä–æ–±–µ–ª)
	return strings.Join(words, " "), nil
}

func main() {
	displayReversed("snow sun dog")
	displayReversed("h√Éllo G√∂√∂dnight üòä")
	displayReversed("100 200 300")
}

func displayReversed(str string) {
	reversed, err := reverseWords(str)
	if err != nil {
		fmt.Println("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —Å—Ç—Ä–æ–∫–∞")
	}
	fmt.Printf("–ë—ã–ª–æ <%s> ; –°—Ç–∞–ª–æ <%s>\n\n", str, reversed)
}
